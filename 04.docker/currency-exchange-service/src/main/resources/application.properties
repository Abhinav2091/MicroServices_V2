spring.application.name=currency-exchange
server.port=8000

spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true

# local host will not work inside docker container so to register this application we have to
#use host name that we define inside our .yaml file
#### NOTE :but this will mean you have to build container again
#### so alternative is to configure environment varibles inside our .yaml file
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#eureka.client.serviceUrl.defaultZone=http://naming-server:8761/eureka

resilience4j.retry.instances.sample-api.maxRetryAttempts=5
resilience4j.retry.instances.sample-api.waitDuration=1s
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true

#resilience4j.circuitbreaker.instances.default.failureRateThreshold=90
resilience4j.ratelimiter.instances.default.limitForPeriod=2
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=10s

resilience4j.bulkhead.instances.default.maxConcurrentCalls=10
resilience4j.bulkhead.instances.sample-api.maxConcurrentCalls=10

#to avoid performance issue we can define the sampling probablity 1.0 mean 100%
spring.sleuth.sampler.probability=1.0

spring.zipkin.baseUrl=http://localhost:9411/
##spring.zipkin.sender.type=rabbit